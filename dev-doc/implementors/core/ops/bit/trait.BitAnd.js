(function() {var implementors = {};
implementors["hashbrown"] = [{"text":"impl&lt;T, S, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;&amp;'_ <a class=\"struct\" href=\"hashbrown/hash_set/struct.HashSet.html\" title=\"struct hashbrown::hash_set::HashSet\">HashSet</a>&lt;T, S, A&gt;&gt; for &amp;<a class=\"struct\" href=\"hashbrown/hash_set/struct.HashSet.html\" title=\"struct hashbrown::hash_set::HashSet\">HashSet</a>&lt;T, S, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.BuildHasher.html\" title=\"trait core::hash::BuildHasher\">BuildHasher</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Allocator + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,&nbsp;</span>","synthetic":false,"types":["hashbrown::set::HashSet"]}];
implementors["indexmap"] = [{"text":"impl&lt;T, S1, S2&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;&amp;'_ <a class=\"struct\" href=\"indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S2&gt;&gt; for &amp;<a class=\"struct\" href=\"indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S1&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;S1: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.BuildHasher.html\" title=\"trait core::hash::BuildHasher\">BuildHasher</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;S2: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.BuildHasher.html\" title=\"trait core::hash::BuildHasher\">BuildHasher</a>,&nbsp;</span>","synthetic":false,"types":["indexmap::set::IndexSet"]}];
implementors["maybe_owned"] = [{"text":"impl&lt;'min, L, R, OUT:&nbsp;'min&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"enum\" href=\"maybe_owned/enum.MaybeOwned.html\" title=\"enum maybe_owned::MaybeOwned\">MaybeOwned</a>&lt;'min, R&gt;&gt; for <a class=\"enum\" href=\"maybe_owned/enum.MaybeOwned.html\" title=\"enum maybe_owned::MaybeOwned\">MaybeOwned</a>&lt;'min, L&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;L: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;R, Output = OUT&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;'min </a>R, Output = OUT&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;'min </a>L: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;R, Output = OUT&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;'min </a>R, Output = OUT&gt;,&nbsp;</span>","synthetic":false,"types":["maybe_owned::MaybeOwned"]},{"text":"impl&lt;'min, L, R, OUT:&nbsp;'min&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"enum\" href=\"maybe_owned/enum.MaybeOwnedMut.html\" title=\"enum maybe_owned::MaybeOwnedMut\">MaybeOwnedMut</a>&lt;'min, R&gt;&gt; for <a class=\"enum\" href=\"maybe_owned/enum.MaybeOwnedMut.html\" title=\"enum maybe_owned::MaybeOwnedMut\">MaybeOwnedMut</a>&lt;'min, L&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;L: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;R, Output = OUT&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;'min </a>R, Output = OUT&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;'min </a>L: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;R, Output = OUT&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;'min </a>R, Output = OUT&gt;,&nbsp;</span>","synthetic":false,"types":["maybe_owned::MaybeOwnedMut"]}];
implementors["rustix"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"rustix/fs/struct.FdFlags.html\" title=\"struct rustix::fs::FdFlags\">FdFlags</a>&gt; for <a class=\"struct\" href=\"rustix/fs/struct.FdFlags.html\" title=\"struct rustix::fs::FdFlags\">FdFlags</a>","synthetic":false,"types":["rustix::backend::fs::types::FdFlags"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"rustix/fs/struct.Access.html\" title=\"struct rustix::fs::Access\">Access</a>&gt; for <a class=\"struct\" href=\"rustix/fs/struct.Access.html\" title=\"struct rustix::fs::Access\">Access</a>","synthetic":false,"types":["rustix::backend::fs::types::Access"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"rustix/fs/struct.AtFlags.html\" title=\"struct rustix::fs::AtFlags\">AtFlags</a>&gt; for <a class=\"struct\" href=\"rustix/fs/struct.AtFlags.html\" title=\"struct rustix::fs::AtFlags\">AtFlags</a>","synthetic":false,"types":["rustix::backend::fs::types::AtFlags"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"rustix/fs/struct.Mode.html\" title=\"struct rustix::fs::Mode\">Mode</a>&gt; for <a class=\"struct\" href=\"rustix/fs/struct.Mode.html\" title=\"struct rustix::fs::Mode\">Mode</a>","synthetic":false,"types":["rustix::backend::fs::types::Mode"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"rustix/fs/struct.OFlags.html\" title=\"struct rustix::fs::OFlags\">OFlags</a>&gt; for <a class=\"struct\" href=\"rustix/fs/struct.OFlags.html\" title=\"struct rustix::fs::OFlags\">OFlags</a>","synthetic":false,"types":["rustix::backend::fs::types::OFlags"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"rustix/fs/struct.ResolveFlags.html\" title=\"struct rustix::fs::ResolveFlags\">ResolveFlags</a>&gt; for <a class=\"struct\" href=\"rustix/fs/struct.ResolveFlags.html\" title=\"struct rustix::fs::ResolveFlags\">ResolveFlags</a>","synthetic":false,"types":["rustix::backend::fs::types::ResolveFlags"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"rustix/fs/struct.RenameFlags.html\" title=\"struct rustix::fs::RenameFlags\">RenameFlags</a>&gt; for <a class=\"struct\" href=\"rustix/fs/struct.RenameFlags.html\" title=\"struct rustix::fs::RenameFlags\">RenameFlags</a>","synthetic":false,"types":["rustix::backend::fs::types::RenameFlags"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"rustix/fs/struct.MemfdFlags.html\" title=\"struct rustix::fs::MemfdFlags\">MemfdFlags</a>&gt; for <a class=\"struct\" href=\"rustix/fs/struct.MemfdFlags.html\" title=\"struct rustix::fs::MemfdFlags\">MemfdFlags</a>","synthetic":false,"types":["rustix::backend::fs::types::MemfdFlags"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"rustix/fs/struct.SealFlags.html\" title=\"struct rustix::fs::SealFlags\">SealFlags</a>&gt; for <a class=\"struct\" href=\"rustix/fs/struct.SealFlags.html\" title=\"struct rustix::fs::SealFlags\">SealFlags</a>","synthetic":false,"types":["rustix::backend::fs::types::SealFlags"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"rustix/fs/struct.StatxFlags.html\" title=\"struct rustix::fs::StatxFlags\">StatxFlags</a>&gt; for <a class=\"struct\" href=\"rustix/fs/struct.StatxFlags.html\" title=\"struct rustix::fs::StatxFlags\">StatxFlags</a>","synthetic":false,"types":["rustix::backend::fs::types::StatxFlags"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"rustix/fs/struct.FallocateFlags.html\" title=\"struct rustix::fs::FallocateFlags\">FallocateFlags</a>&gt; for <a class=\"struct\" href=\"rustix/fs/struct.FallocateFlags.html\" title=\"struct rustix::fs::FallocateFlags\">FallocateFlags</a>","synthetic":false,"types":["rustix::backend::fs::types::FallocateFlags"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"rustix/fs/struct.StatVfsMountFlags.html\" title=\"struct rustix::fs::StatVfsMountFlags\">StatVfsMountFlags</a>&gt; for <a class=\"struct\" href=\"rustix/fs/struct.StatVfsMountFlags.html\" title=\"struct rustix::fs::StatVfsMountFlags\">StatVfsMountFlags</a>","synthetic":false,"types":["rustix::backend::fs::types::StatVfsMountFlags"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"rustix/io/epoll/struct.CreateFlags.html\" title=\"struct rustix::io::epoll::CreateFlags\">CreateFlags</a>&gt; for <a class=\"struct\" href=\"rustix/io/epoll/struct.CreateFlags.html\" title=\"struct rustix::io::epoll::CreateFlags\">CreateFlags</a>","synthetic":false,"types":["rustix::backend::io::epoll::CreateFlags"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"rustix/io/epoll/struct.EventFlags.html\" title=\"struct rustix::io::epoll::EventFlags\">EventFlags</a>&gt; for <a class=\"struct\" href=\"rustix/io/epoll/struct.EventFlags.html\" title=\"struct rustix::io::epoll::EventFlags\">EventFlags</a>","synthetic":false,"types":["rustix::backend::io::epoll::EventFlags"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"rustix/io/struct.PollFlags.html\" title=\"struct rustix::io::PollFlags\">PollFlags</a>&gt; for <a class=\"struct\" href=\"rustix/io/struct.PollFlags.html\" title=\"struct rustix::io::PollFlags\">PollFlags</a>","synthetic":false,"types":["rustix::backend::io::poll_fd::PollFlags"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"rustix/io/struct.ReadWriteFlags.html\" title=\"struct rustix::io::ReadWriteFlags\">ReadWriteFlags</a>&gt; for <a class=\"struct\" href=\"rustix/io/struct.ReadWriteFlags.html\" title=\"struct rustix::io::ReadWriteFlags\">ReadWriteFlags</a>","synthetic":false,"types":["rustix::backend::io::types::ReadWriteFlags"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"rustix/io/struct.DupFlags.html\" title=\"struct rustix::io::DupFlags\">DupFlags</a>&gt; for <a class=\"struct\" href=\"rustix/io/struct.DupFlags.html\" title=\"struct rustix::io::DupFlags\">DupFlags</a>","synthetic":false,"types":["rustix::backend::io::types::DupFlags"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"rustix/io/struct.PipeFlags.html\" title=\"struct rustix::io::PipeFlags\">PipeFlags</a>&gt; for <a class=\"struct\" href=\"rustix/io/struct.PipeFlags.html\" title=\"struct rustix::io::PipeFlags\">PipeFlags</a>","synthetic":false,"types":["rustix::backend::io::types::PipeFlags"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"rustix/io/struct.EventfdFlags.html\" title=\"struct rustix::io::EventfdFlags\">EventfdFlags</a>&gt; for <a class=\"struct\" href=\"rustix/io/struct.EventfdFlags.html\" title=\"struct rustix::io::EventfdFlags\">EventfdFlags</a>","synthetic":false,"types":["rustix::backend::io::types::EventfdFlags"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"rustix/mm/struct.ProtFlags.html\" title=\"struct rustix::mm::ProtFlags\">ProtFlags</a>&gt; for <a class=\"struct\" href=\"rustix/mm/struct.ProtFlags.html\" title=\"struct rustix::mm::ProtFlags\">ProtFlags</a>","synthetic":false,"types":["rustix::backend::mm::types::ProtFlags"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"rustix/mm/struct.MprotectFlags.html\" title=\"struct rustix::mm::MprotectFlags\">MprotectFlags</a>&gt; for <a class=\"struct\" href=\"rustix/mm/struct.MprotectFlags.html\" title=\"struct rustix::mm::MprotectFlags\">MprotectFlags</a>","synthetic":false,"types":["rustix::backend::mm::types::MprotectFlags"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"rustix/mm/struct.MapFlags.html\" title=\"struct rustix::mm::MapFlags\">MapFlags</a>&gt; for <a class=\"struct\" href=\"rustix/mm/struct.MapFlags.html\" title=\"struct rustix::mm::MapFlags\">MapFlags</a>","synthetic":false,"types":["rustix::backend::mm::types::MapFlags"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"rustix/mm/struct.MremapFlags.html\" title=\"struct rustix::mm::MremapFlags\">MremapFlags</a>&gt; for <a class=\"struct\" href=\"rustix/mm/struct.MremapFlags.html\" title=\"struct rustix::mm::MremapFlags\">MremapFlags</a>","synthetic":false,"types":["rustix::backend::mm::types::MremapFlags"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"rustix/mm/struct.MlockFlags.html\" title=\"struct rustix::mm::MlockFlags\">MlockFlags</a>&gt; for <a class=\"struct\" href=\"rustix/mm/struct.MlockFlags.html\" title=\"struct rustix::mm::MlockFlags\">MlockFlags</a>","synthetic":false,"types":["rustix::backend::mm::types::MlockFlags"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"rustix/mm/struct.MsyncFlags.html\" title=\"struct rustix::mm::MsyncFlags\">MsyncFlags</a>&gt; for <a class=\"struct\" href=\"rustix/mm/struct.MsyncFlags.html\" title=\"struct rustix::mm::MsyncFlags\">MsyncFlags</a>","synthetic":false,"types":["rustix::backend::mm::types::MsyncFlags"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"rustix/mm/struct.UserfaultfdFlags.html\" title=\"struct rustix::mm::UserfaultfdFlags\">UserfaultfdFlags</a>&gt; for <a class=\"struct\" href=\"rustix/mm/struct.UserfaultfdFlags.html\" title=\"struct rustix::mm::UserfaultfdFlags\">UserfaultfdFlags</a>","synthetic":false,"types":["rustix::backend::mm::types::UserfaultfdFlags"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"rustix/net/struct.SendFlags.html\" title=\"struct rustix::net::SendFlags\">SendFlags</a>&gt; for <a class=\"struct\" href=\"rustix/net/struct.SendFlags.html\" title=\"struct rustix::net::SendFlags\">SendFlags</a>","synthetic":false,"types":["rustix::backend::net::send_recv::SendFlags"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"rustix/net/struct.RecvFlags.html\" title=\"struct rustix::net::RecvFlags\">RecvFlags</a>&gt; for <a class=\"struct\" href=\"rustix/net/struct.RecvFlags.html\" title=\"struct rustix::net::RecvFlags\">RecvFlags</a>","synthetic":false,"types":["rustix::backend::net::send_recv::RecvFlags"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"rustix/net/struct.AcceptFlags.html\" title=\"struct rustix::net::AcceptFlags\">AcceptFlags</a>&gt; for <a class=\"struct\" href=\"rustix/net/struct.AcceptFlags.html\" title=\"struct rustix::net::AcceptFlags\">AcceptFlags</a>","synthetic":false,"types":["rustix::backend::net::types::AcceptFlags"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"rustix/net/struct.SocketFlags.html\" title=\"struct rustix::net::SocketFlags\">SocketFlags</a>&gt; for <a class=\"struct\" href=\"rustix/net/struct.SocketFlags.html\" title=\"struct rustix::net::SocketFlags\">SocketFlags</a>","synthetic":false,"types":["rustix::backend::net::types::SocketFlags"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"rustix/time/struct.TimerfdFlags.html\" title=\"struct rustix::time::TimerfdFlags\">TimerfdFlags</a>&gt; for <a class=\"struct\" href=\"rustix/time/struct.TimerfdFlags.html\" title=\"struct rustix::time::TimerfdFlags\">TimerfdFlags</a>","synthetic":false,"types":["rustix::backend::time::types::TimerfdFlags"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"rustix/time/struct.TimerfdTimerFlags.html\" title=\"struct rustix::time::TimerfdTimerFlags\">TimerfdTimerFlags</a>&gt; for <a class=\"struct\" href=\"rustix/time/struct.TimerfdTimerFlags.html\" title=\"struct rustix::time::TimerfdTimerFlags\">TimerfdTimerFlags</a>","synthetic":false,"types":["rustix::backend::time::types::TimerfdTimerFlags"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"rustix/process/struct.MembarrierQuery.html\" title=\"struct rustix::process::MembarrierQuery\">MembarrierQuery</a>&gt; for <a class=\"struct\" href=\"rustix/process/struct.MembarrierQuery.html\" title=\"struct rustix::process::MembarrierQuery\">MembarrierQuery</a>","synthetic":false,"types":["rustix::process::membarrier::MembarrierQuery"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"rustix/process/struct.WaitOptions.html\" title=\"struct rustix::process::WaitOptions\">WaitOptions</a>&gt; for <a class=\"struct\" href=\"rustix/process/struct.WaitOptions.html\" title=\"struct rustix::process::WaitOptions\">WaitOptions</a>","synthetic":false,"types":["rustix::process::wait::WaitOptions"]}];
implementors["system_interface"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"system_interface/fs/struct.FdFlags.html\" title=\"struct system_interface::fs::FdFlags\">FdFlags</a>&gt; for <a class=\"struct\" href=\"system_interface/fs/struct.FdFlags.html\" title=\"struct system_interface::fs::FdFlags\">FdFlags</a>","synthetic":false,"types":["system_interface::fs::fd_flags::FdFlags"]}];
implementors["tracing_subscriber"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"tracing_subscriber/fmt/format/struct.FmtSpan.html\" title=\"struct tracing_subscriber::fmt::format::FmtSpan\">FmtSpan</a>&gt; for <a class=\"struct\" href=\"tracing_subscriber/fmt/format/struct.FmtSpan.html\" title=\"struct tracing_subscriber::fmt::format::FmtSpan\">FmtSpan</a>","synthetic":false,"types":["tracing_subscriber::fmt::format::FmtSpan"]}];
implementors["typenum"] = [{"text":"impl&lt;Rhs:&nbsp;<a class=\"trait\" href=\"typenum/marker_traits/trait.Bit.html\" title=\"trait typenum::marker_traits::Bit\">Bit</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;Rhs&gt; for <a class=\"struct\" href=\"typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>","synthetic":false,"types":["typenum::bit::B0"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt; for <a class=\"struct\" href=\"typenum/bit/struct.B1.html\" title=\"struct typenum::bit::B1\">B1</a>","synthetic":false,"types":["typenum::bit::B1"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"typenum/bit/struct.B1.html\" title=\"struct typenum::bit::B1\">B1</a>&gt; for <a class=\"struct\" href=\"typenum/bit/struct.B1.html\" title=\"struct typenum::bit::B1\">B1</a>","synthetic":false,"types":["typenum::bit::B1"]},{"text":"impl&lt;Ur:&nbsp;<a class=\"trait\" href=\"typenum/marker_traits/trait.Unsigned.html\" title=\"trait typenum::marker_traits::Unsigned\">Unsigned</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;Ur&gt; for <a class=\"struct\" href=\"typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>","synthetic":false,"types":["typenum::uint::UTerm"]},{"text":"impl&lt;Ul:&nbsp;<a class=\"trait\" href=\"typenum/marker_traits/trait.Unsigned.html\" title=\"trait typenum::marker_traits::Unsigned\">Unsigned</a>, Bl:&nbsp;<a class=\"trait\" href=\"typenum/marker_traits/trait.Bit.html\" title=\"trait typenum::marker_traits::Bit\">Bit</a>, Ur:&nbsp;<a class=\"trait\" href=\"typenum/marker_traits/trait.Unsigned.html\" title=\"trait typenum::marker_traits::Unsigned\">Unsigned</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;Ur&gt; for <a class=\"struct\" href=\"typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;Ul, Bl&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;<a class=\"struct\" href=\"typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;Ul, Bl&gt;: PrivateAnd&lt;Ur&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;PrivateAndOut&lt;<a class=\"struct\" href=\"typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;Ul, Bl&gt;, Ur&gt;: Trim,&nbsp;</span>","synthetic":false,"types":["typenum::uint::UInt"]}];
implementors["wasi_common"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"wasi_common/dir/struct.DirCaps.html\" title=\"struct wasi_common::dir::DirCaps\">DirCaps</a>&gt; for <a class=\"struct\" href=\"wasi_common/dir/struct.DirCaps.html\" title=\"struct wasi_common::dir::DirCaps\">DirCaps</a>","synthetic":false,"types":["wasi_common::dir::DirCaps"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"wasi_common/file/struct.FdFlags.html\" title=\"struct wasi_common::file::FdFlags\">FdFlags</a>&gt; for <a class=\"struct\" href=\"wasi_common/file/struct.FdFlags.html\" title=\"struct wasi_common::file::FdFlags\">FdFlags</a>","synthetic":false,"types":["wasi_common::file::FdFlags"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"wasi_common/file/struct.SdFlags.html\" title=\"struct wasi_common::file::SdFlags\">SdFlags</a>&gt; for <a class=\"struct\" href=\"wasi_common/file/struct.SdFlags.html\" title=\"struct wasi_common::file::SdFlags\">SdFlags</a>","synthetic":false,"types":["wasi_common::file::SdFlags"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"wasi_common/file/struct.SiFlags.html\" title=\"struct wasi_common::file::SiFlags\">SiFlags</a>&gt; for <a class=\"struct\" href=\"wasi_common/file/struct.SiFlags.html\" title=\"struct wasi_common::file::SiFlags\">SiFlags</a>","synthetic":false,"types":["wasi_common::file::SiFlags"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"wasi_common/file/struct.RiFlags.html\" title=\"struct wasi_common::file::RiFlags\">RiFlags</a>&gt; for <a class=\"struct\" href=\"wasi_common/file/struct.RiFlags.html\" title=\"struct wasi_common::file::RiFlags\">RiFlags</a>","synthetic":false,"types":["wasi_common::file::RiFlags"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"wasi_common/file/struct.RoFlags.html\" title=\"struct wasi_common::file::RoFlags\">RoFlags</a>&gt; for <a class=\"struct\" href=\"wasi_common/file/struct.RoFlags.html\" title=\"struct wasi_common::file::RoFlags\">RoFlags</a>","synthetic":false,"types":["wasi_common::file::RoFlags"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"wasi_common/file/struct.OFlags.html\" title=\"struct wasi_common::file::OFlags\">OFlags</a>&gt; for <a class=\"struct\" href=\"wasi_common/file/struct.OFlags.html\" title=\"struct wasi_common::file::OFlags\">OFlags</a>","synthetic":false,"types":["wasi_common::file::OFlags"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"wasi_common/file/struct.FileCaps.html\" title=\"struct wasi_common::file::FileCaps\">FileCaps</a>&gt; for <a class=\"struct\" href=\"wasi_common/file/struct.FileCaps.html\" title=\"struct wasi_common::file::FileCaps\">FileCaps</a>","synthetic":false,"types":["wasi_common::file::FileCaps"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"wasi_common/sched/subscription/struct.RwEventFlags.html\" title=\"struct wasi_common::sched::subscription::RwEventFlags\">RwEventFlags</a>&gt; for <a class=\"struct\" href=\"wasi_common/sched/subscription/struct.RwEventFlags.html\" title=\"struct wasi_common::sched::subscription::RwEventFlags\">RwEventFlags</a>","synthetic":false,"types":["wasi_common::sched::subscription::RwEventFlags"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"wasi_common/snapshots/preview_0/types/struct.Rights.html\" title=\"struct wasi_common::snapshots::preview_0::types::Rights\">Rights</a>&gt; for <a class=\"struct\" href=\"wasi_common/snapshots/preview_0/types/struct.Rights.html\" title=\"struct wasi_common::snapshots::preview_0::types::Rights\">Rights</a>","synthetic":false,"types":["wasi_common::snapshots::preview_0::types::Rights"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"wasi_common/snapshots/preview_0/types/struct.Fdflags.html\" title=\"struct wasi_common::snapshots::preview_0::types::Fdflags\">Fdflags</a>&gt; for <a class=\"struct\" href=\"wasi_common/snapshots/preview_0/types/struct.Fdflags.html\" title=\"struct wasi_common::snapshots::preview_0::types::Fdflags\">Fdflags</a>","synthetic":false,"types":["wasi_common::snapshots::preview_0::types::Fdflags"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"wasi_common/snapshots/preview_0/types/struct.Fstflags.html\" title=\"struct wasi_common::snapshots::preview_0::types::Fstflags\">Fstflags</a>&gt; for <a class=\"struct\" href=\"wasi_common/snapshots/preview_0/types/struct.Fstflags.html\" title=\"struct wasi_common::snapshots::preview_0::types::Fstflags\">Fstflags</a>","synthetic":false,"types":["wasi_common::snapshots::preview_0::types::Fstflags"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"wasi_common/snapshots/preview_0/types/struct.Lookupflags.html\" title=\"struct wasi_common::snapshots::preview_0::types::Lookupflags\">Lookupflags</a>&gt; for <a class=\"struct\" href=\"wasi_common/snapshots/preview_0/types/struct.Lookupflags.html\" title=\"struct wasi_common::snapshots::preview_0::types::Lookupflags\">Lookupflags</a>","synthetic":false,"types":["wasi_common::snapshots::preview_0::types::Lookupflags"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"wasi_common/snapshots/preview_0/types/struct.Oflags.html\" title=\"struct wasi_common::snapshots::preview_0::types::Oflags\">Oflags</a>&gt; for <a class=\"struct\" href=\"wasi_common/snapshots/preview_0/types/struct.Oflags.html\" title=\"struct wasi_common::snapshots::preview_0::types::Oflags\">Oflags</a>","synthetic":false,"types":["wasi_common::snapshots::preview_0::types::Oflags"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"wasi_common/snapshots/preview_0/types/struct.Eventrwflags.html\" title=\"struct wasi_common::snapshots::preview_0::types::Eventrwflags\">Eventrwflags</a>&gt; for <a class=\"struct\" href=\"wasi_common/snapshots/preview_0/types/struct.Eventrwflags.html\" title=\"struct wasi_common::snapshots::preview_0::types::Eventrwflags\">Eventrwflags</a>","synthetic":false,"types":["wasi_common::snapshots::preview_0::types::Eventrwflags"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"wasi_common/snapshots/preview_0/types/struct.Subclockflags.html\" title=\"struct wasi_common::snapshots::preview_0::types::Subclockflags\">Subclockflags</a>&gt; for <a class=\"struct\" href=\"wasi_common/snapshots/preview_0/types/struct.Subclockflags.html\" title=\"struct wasi_common::snapshots::preview_0::types::Subclockflags\">Subclockflags</a>","synthetic":false,"types":["wasi_common::snapshots::preview_0::types::Subclockflags"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"wasi_common/snapshots/preview_0/types/struct.Riflags.html\" title=\"struct wasi_common::snapshots::preview_0::types::Riflags\">Riflags</a>&gt; for <a class=\"struct\" href=\"wasi_common/snapshots/preview_0/types/struct.Riflags.html\" title=\"struct wasi_common::snapshots::preview_0::types::Riflags\">Riflags</a>","synthetic":false,"types":["wasi_common::snapshots::preview_0::types::Riflags"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"wasi_common/snapshots/preview_0/types/struct.Roflags.html\" title=\"struct wasi_common::snapshots::preview_0::types::Roflags\">Roflags</a>&gt; for <a class=\"struct\" href=\"wasi_common/snapshots/preview_0/types/struct.Roflags.html\" title=\"struct wasi_common::snapshots::preview_0::types::Roflags\">Roflags</a>","synthetic":false,"types":["wasi_common::snapshots::preview_0::types::Roflags"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"wasi_common/snapshots/preview_0/types/struct.Sdflags.html\" title=\"struct wasi_common::snapshots::preview_0::types::Sdflags\">Sdflags</a>&gt; for <a class=\"struct\" href=\"wasi_common/snapshots/preview_0/types/struct.Sdflags.html\" title=\"struct wasi_common::snapshots::preview_0::types::Sdflags\">Sdflags</a>","synthetic":false,"types":["wasi_common::snapshots::preview_0::types::Sdflags"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"wasi_common/snapshots/preview_1/types/struct.Rights.html\" title=\"struct wasi_common::snapshots::preview_1::types::Rights\">Rights</a>&gt; for <a class=\"struct\" href=\"wasi_common/snapshots/preview_1/types/struct.Rights.html\" title=\"struct wasi_common::snapshots::preview_1::types::Rights\">Rights</a>","synthetic":false,"types":["wasi_common::snapshots::preview_1::types::Rights"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"wasi_common/snapshots/preview_1/types/struct.Fdflags.html\" title=\"struct wasi_common::snapshots::preview_1::types::Fdflags\">Fdflags</a>&gt; for <a class=\"struct\" href=\"wasi_common/snapshots/preview_1/types/struct.Fdflags.html\" title=\"struct wasi_common::snapshots::preview_1::types::Fdflags\">Fdflags</a>","synthetic":false,"types":["wasi_common::snapshots::preview_1::types::Fdflags"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"wasi_common/snapshots/preview_1/types/struct.Fstflags.html\" title=\"struct wasi_common::snapshots::preview_1::types::Fstflags\">Fstflags</a>&gt; for <a class=\"struct\" href=\"wasi_common/snapshots/preview_1/types/struct.Fstflags.html\" title=\"struct wasi_common::snapshots::preview_1::types::Fstflags\">Fstflags</a>","synthetic":false,"types":["wasi_common::snapshots::preview_1::types::Fstflags"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"wasi_common/snapshots/preview_1/types/struct.Lookupflags.html\" title=\"struct wasi_common::snapshots::preview_1::types::Lookupflags\">Lookupflags</a>&gt; for <a class=\"struct\" href=\"wasi_common/snapshots/preview_1/types/struct.Lookupflags.html\" title=\"struct wasi_common::snapshots::preview_1::types::Lookupflags\">Lookupflags</a>","synthetic":false,"types":["wasi_common::snapshots::preview_1::types::Lookupflags"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"wasi_common/snapshots/preview_1/types/struct.Oflags.html\" title=\"struct wasi_common::snapshots::preview_1::types::Oflags\">Oflags</a>&gt; for <a class=\"struct\" href=\"wasi_common/snapshots/preview_1/types/struct.Oflags.html\" title=\"struct wasi_common::snapshots::preview_1::types::Oflags\">Oflags</a>","synthetic":false,"types":["wasi_common::snapshots::preview_1::types::Oflags"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"wasi_common/snapshots/preview_1/types/struct.Eventrwflags.html\" title=\"struct wasi_common::snapshots::preview_1::types::Eventrwflags\">Eventrwflags</a>&gt; for <a class=\"struct\" href=\"wasi_common/snapshots/preview_1/types/struct.Eventrwflags.html\" title=\"struct wasi_common::snapshots::preview_1::types::Eventrwflags\">Eventrwflags</a>","synthetic":false,"types":["wasi_common::snapshots::preview_1::types::Eventrwflags"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"wasi_common/snapshots/preview_1/types/struct.Subclockflags.html\" title=\"struct wasi_common::snapshots::preview_1::types::Subclockflags\">Subclockflags</a>&gt; for <a class=\"struct\" href=\"wasi_common/snapshots/preview_1/types/struct.Subclockflags.html\" title=\"struct wasi_common::snapshots::preview_1::types::Subclockflags\">Subclockflags</a>","synthetic":false,"types":["wasi_common::snapshots::preview_1::types::Subclockflags"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"wasi_common/snapshots/preview_1/types/struct.Riflags.html\" title=\"struct wasi_common::snapshots::preview_1::types::Riflags\">Riflags</a>&gt; for <a class=\"struct\" href=\"wasi_common/snapshots/preview_1/types/struct.Riflags.html\" title=\"struct wasi_common::snapshots::preview_1::types::Riflags\">Riflags</a>","synthetic":false,"types":["wasi_common::snapshots::preview_1::types::Riflags"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"wasi_common/snapshots/preview_1/types/struct.Roflags.html\" title=\"struct wasi_common::snapshots::preview_1::types::Roflags\">Roflags</a>&gt; for <a class=\"struct\" href=\"wasi_common/snapshots/preview_1/types/struct.Roflags.html\" title=\"struct wasi_common::snapshots::preview_1::types::Roflags\">Roflags</a>","synthetic":false,"types":["wasi_common::snapshots::preview_1::types::Roflags"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"wasi_common/snapshots/preview_1/types/struct.Sdflags.html\" title=\"struct wasi_common::snapshots::preview_1::types::Sdflags\">Sdflags</a>&gt; for <a class=\"struct\" href=\"wasi_common/snapshots/preview_1/types/struct.Sdflags.html\" title=\"struct wasi_common::snapshots::preview_1::types::Sdflags\">Sdflags</a>","synthetic":false,"types":["wasi_common::snapshots::preview_1::types::Sdflags"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()