initSidebarItems({"fn":[["block_on","Blocks the current thread on a future, processing I/O events when idle."],["spawn","Spawns a task onto the global executor (single-threaded by default)."],["unblock","Runs blocking code on a thread pool."]],"macro":[["pin","Pins a variable of type `T` on the stack and rebinds it as `Pin<&mut T>`."],["ready","Unwraps `Poll<T>` or returns [`Pending`][`core::task::Poll::Pending`]."]],"mod":[["channel","An async multi-producer multi-consumer channel."],["fs","Async filesystem primitives."],["future","Combinators for the [`Future`] trait."],["io","Tools and combinators for I/O."],["lock","Async synchronization primitives."],["net","Async networking primitives for TCP/UDP/Unix communication."],["prelude","Traits [`Future`], [`Stream`], [`AsyncRead`], [`AsyncWrite`], [`AsyncBufRead`], [`AsyncSeek`], and their extensions."],["process","Async interface for working with processes."],["stream","Combinators for the [`Stream`] trait."]],"struct":[["Async","Async adapter for I/O types."],["Executor","An async executor."],["LocalExecutor","A thread-local executor."],["Task","A spawned task."],["Timer","A future or stream that emits timed events."],["Unblock","Runs blocking I/O on a thread pool."]]});