initSidebarItems({"enum":[["IpAddr","An IP address, either IPv4 or IPv6."],["Shutdown","`SHUT_*` constants for use with `shutdown`."],["SocketAddr","An internet socket address, either IPv4 or IPv6."],["SocketAddrAny","`struct sockaddr_storage` as a Rust enum."]],"fn":[["accept","`accept(fd, NULL, NULL)`—Accepts an incoming connection."],["accept_with","`accept4(fd, NULL, NULL, flags)`—Accepts an incoming connection, with flags."],["acceptfrom","`accept(fd, &addr, &len)`—Accepts an incoming connection and returns the peer address."],["acceptfrom_with","`accept4(fd, &addr, &len, flags)`—Accepts an incoming connection and returns the peer address, with flags."],["bind","`bind(sockfd, addr)`—Binds a socket to an IP address."],["bind_any","`bind(sockfd, addr)`—Binds a socket to an address."],["bind_unix","`bind(sockfd, addr, sizeof(struct sockaddr_un))`—Binds a socket to a Unix-domain address."],["bind_v4","`bind(sockfd, addr, sizeof(struct sockaddr_in))`—Binds a socket to an IPv4 address."],["bind_v6","`bind(sockfd, addr, sizeof(struct sockaddr_in6))`—Binds a socket to an IPv6 address."],["connect","`connect(sockfd, addr)`—Initiates a connection to an IP address."],["connect_any","`connect(sockfd, addr)`—Initiates a connection."],["connect_unix","`connect(sockfd, addr, sizeof(struct sockaddr_un))`—Initiates a connection to a Unix-domain address."],["connect_v4","`connect(sockfd, addr, sizeof(struct sockaddr_in))`—Initiates a connection to an IPv4 address."],["connect_v6","`connect(sockfd, addr, sizeof(struct sockaddr_in6))`—Initiates a connection to an IPv6 address."],["getpeername","`getpeername(fd, addr, len)`—Returns the address a socket is connected to."],["getsockname","`getsockname(fd, addr, len)`—Returns the address a socket is bound to."],["listen","`listen(fd, backlog)`—Enables listening for incoming connections."],["recv","`recv(fd, buf, flags)`—Reads data from a socket."],["recvfrom","`recvfrom(fd, buf, flags, addr, len)`—Reads data from a socket and returns the sender address."],["send","`send(fd, buf, flags)`—Writes data to a socket."],["sendto","`sendto(fd, buf, flags, addr)`—Writes data to a socket to a specific IP address."],["sendto_any","`sendto(fd, buf, flags, addr)`—Writes data to a socket to a specific address."],["sendto_unix","`sendto(fd, buf, flags, addr, sizeof(struct sockaddr_un))`—Writes data to a socket to a specific Unix-domain socket address."],["sendto_v4","`sendto(fd, buf, flags, addr, sizeof(struct sockaddr_in))`—Writes data to a socket to a specific IPv4 address."],["sendto_v6","`sendto(fd, buf, flags, addr, sizeof(struct sockaddr_in6))`—Writes data to a socket to a specific IPv6 address."],["shutdown","`shutdown(fd, how)`—Closes the read and/or write sides of a stream."],["socket","`socket(domain, type_, protocol)`—Creates a socket."],["socket_with","`socket_with(domain, type_ | flags, protocol)`—Creates a socket, with flags."],["socketpair","`socketpair(domain, type_ | accept_flags, protocol)`"]],"mod":[["sockopt","`getsockopt` and `setsockopt` functions."]],"struct":[["AcceptFlags","`SOCK_*` constants for use with `accept_with` and `acceptfrom_with`."],["AddressFamily","`AF_*` constants."],["Ipv4Addr","An IPv4 address."],["Ipv6Addr","An IPv6 address."],["Protocol","`IPPROTO_*`"],["RecvFlags","`MSG_*`"],["SendFlags","`MSG_*`"],["SocketAddrUnix","`struct sockaddr_un`"],["SocketAddrV4","An IPv4 socket address."],["SocketAddrV6","An IPv6 socket address."],["SocketFlags","`SOCK_*` constants for use with `socket`."],["SocketType","`SOCK_*` constants for use with `socket`."]],"type":[["SocketAddrStorage","`struct sockaddr_storage` as a raw struct."]]});